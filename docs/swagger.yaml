openapi: 3.0.2
info:
    title: Kerli pangaAPI
    version: 1.0.0
servers:
    -
        url: 'https://kerliarendab.xyz'
        description: Production server
    -
        url: 'http://localhost:8080'
        description: Local development server
paths:
    /users:
        description: User related operations
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postUsersRequest'
                required: true
            tags:
                - users
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/userObject'
                    description: User has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid password:
                                    value:
                                        error: Invalid password
                                Invalid name:
                                    value:
                                        error: Invalid name
                                Invalid username:
                                    value:
                                        error: Invalid username
                    description: Bad request
                '409':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Username already exists:
                                    value:
                                        error: Username already exists
                    description: Username already exists
            summary: Registers a new user
    /users/current:
        get:
            tags:
                - users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/getUsersCurrentResponse'
                    description: Succesful request
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing Authorization header:
                                    value:
                                        error: Missing Authorization header
                                Invalid token:
                                    value:
                                        error: Invalid token
                    description: Unauthorized
            security:
                -
                    Authorization: []
            summary: Returns currently logged in userÂ´s data
    /sessions:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postSessionsRequest'
                required: true
            tags:
                - sessions
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/postSessionsResponse'
                    description: Session token has been created
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid username/password:
                                    value:
                                        error: Invalid username/password
                    description: Invalid username/password
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing username or password:
                                    value:
                                        error: Missing username or password
                    description: Missing username or password
            summary: Create new session token for user (log in)
        delete:
            tags:
                - sessions
            responses:
                '204':
                    description: Session token has been deleted
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid Authorization header format:
                                    value:
                                        error: Invalid Authorization header format
                    description: Invalid Authorization header format
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Missing Authorization header:
                                    value:
                                        error: Missing Authorization header
                                Invalid token:
                                    value:
                                        error: Invalid token
                    description: Missing Authorization header
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Invalid session:
                                    value:
                                        error: Invalid session
                    description: Invalid session
            security:
                -
                    Authorization: []
            summary: Delete session token (log out)
    /transactions:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postTransactionsRequest'
                required: true
            tags:
                - transactions
            responses:
                '201':
                    content:
                        application/json: {}
                    description: Transaction has been successfully queued for processing
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                invalidAmount:
                                    value:
                                        error: Invalid amount
                                invalidAccountTo:
                                    value:
                                        error: Invalid accountTo
                    description: Invalid amount
                '401':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                missingAuthorizationHeader:
                                    value:
                                        error: Missing authorizzation header
                    description: Unauthorized
                '402':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                insufficinentFunds:
                                    value:
                                        error: Insufficient funds
                    description: Payment required
                '403':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                forbidden:
                                    value:
                                        error: Forbidden
                    description: The accountFrom does not belong to the user
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                accountNotFound:
                                    value:
                                        error: Account not found
                    description: Account not found
            security:
                -
                    Authorization: []
            summary: Transfer funds
    /transactions/b2b:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/postTransactionsb2bRequest'
                required: true
            tags:
                - transactions
            responses:
                '200':
                    content:
                        application/json:
                            examples:
                                receiverName:
                                    value:
                                        receiverName: Karl Kaalikas
                    description: 'Transaction was successful, money was transferred to '
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Parsing JWT payload failed:
                                    value:
                                        error: 'Parsing JWT payload failed: '
                                The account sending the funds does not belong to a bank registered in Central Bank:
                                    value:
                                        error: >-
                                            The account sending the funds does not belong to a bank registered
                                            in Central Bank
                                'Cannot verify your signature: The jwksUrl of your bank is invalid:':
                                    value:
                                        error: >-
                                            Cannot verify your signature: The jwksUrl of your bank  is
                                            invalid:
                                Invalid signature:
                                    value:
                                        error: Invalid signature
                    description: Parsing JWT payload failed
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Account not found:
                                    value:
                                        error: Account not found
                    description: Account not found
                '500':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                'Cannot verify your signature: The jwksUrl of your bank is missing':
                                    value:
                                        error: 'Cannot verify your signature: The jwksUrl of your bank is missing'
                    description: 'Cannot verify your signature: The jwksUrl of your bank is missing'
                '502':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/errorResponse'
                            examples:
                                Central Bank error:
                                    value:
                                        error: 'Central Bank error: '
                    description: Central Bank error
            summary: Accepts external bank transfers
    /transactions/jwks:
        get:
            tags:
                - transactions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/getTransactionsJwksResponse'
                    description: Successful operation
            summary: Get bank public key
components:
    schemas:
        postUsersRequest:
            title: POST /users request
            description: ''
            required:
                - name
                - username
                - password
            type: object
            properties:
                name:
                    description: Users full name
                    type: string
                username:
                    description: Username
                    type: string
                password:
                    description: Password
                    type: string
            example:
                name: Mari Maasikas
                username: Mari37
                password: mariparool
        postSessionsRequest:
            title: POST /sessions request
            description: ''
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
            example:
                username: Mari37
                password: mariparool
        postSessionsResponse:
            title: POST /sessions response
            description: Session has been created
            required: []
            type: object
            properties:
                token:
                    description: User`s session token
                    type: string
            example:
                token: 5f800e29f3f2d921c8c0ee09
        deleteSessionsRequest:
            title: DELETE /sessions request
            description: ''
            type: object
            properties:
                Authorization:
                    type: string
            example:
                Authorization: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZjcyMmQxZGRhYWRiZDVhYTBkOGNhMjYiLCJpYXQiOjE2MDEzMTgxODZ9.HABqtzBwtnVxnIoI16ZTNpgklX72-dYHALTL2GDHy58
        userObject:
            title: userObject
            description: ''
            type: object
            properties:
                id:
                    description: UserÂ´s ID
                    type: string
                name:
                    description: User`s full name
                    type: string
                username:
                    description: Username
                    type: string
                accounts:
                    $ref: '#/components/schemas/account'
                    description: Array of user`s bank accounts
            example:
                id: 5f801a4d478a5a6dec32ecf6
                name: Mari Maasikas
                username: Mari37
                accounts:
                    -
                        name: Main
                        balance: 100000
                        currency: EUR
                        number: ETCe00fd669b985804f27dc29ae257d218e
        errorResponse:
            title: error response
            description: Generic error response
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message
        getUsersCurrentResponse:
            title: GET /users/current response
            description: ''
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                username:
                    type: string
                accounts:
                    description: Array of user`s accounts
                    type: array
                    items:
                        $ref: '#/components/schemas/account'
            example:
                id: 5f801a4d478a5a6dec32ecf6
                name: Mari Maasikas
                username: Mari37
                accounts:
                    -
                        name: Main
                        balance: 100000
                        currency: EUR
                        number: ETCe00fd669b985804f27dc29ae257d218e
        account:
            title: account
            description: ''
            type: object
            properties:
                name:
                    type: string
                balance:
                    type: integer
                currency:
                    type: string
                number:
                    type: string
            example:
                name: Main
                balance: 100000
                currency: EUR
                number: ETCe00fd669b985804f27dc29ae257d218e
        postTransactionsRequest:
            title: POST /transactions request
            description: ''
            type: object
            properties:
                accountFrom:
                    description: Sender`s bank account
                    type: string
                accountTo:
                    description: Receiver`s bank account
                    type: string
                amount:
                    format: int32
                    description: The sum
                    type: integer
                explanation:
                    description: Purpose of the transaction
                    type: string
            example:
                accountFrom: 8b9a7cfefd4d642f9a6be0ca537f5b6ec83
                accountTo: 8b9844e7ca913f1aae49e0223101068989e
                amount: 1500
                explanation: money for food
        postTransactionsb2bRequest:
            title: POST /transactions/b2b request
            description: ''
            type: object
            properties:
                jwt:
                    description: Jason Web Token that contains the transaction information
                    type: string
            example:
                jwt: >-
                    eyJhbGciOiJSUzI1NiIsImtpZCI6IklQcElnMVhwMEhKbHpVME04dExwd25wYlZNX3NvYUFOUG5CRmQweWJTN1EifQ.eyJhY2NvdW50RnJvbSI6IjhiOWE3Y2ZlZmQ0ZDY0MmY5YTZiZTBjYTUzN2Y1YjZlYzgzIiwiYWNjb3VudFRvIjoiOGI5ODQ0ZTdjYTkxM2YxYWFlNDllMDIyMzEwMTA2ODk4OWUiLCJjdXJyZW5jeSI6IkVVUiIsImFtb3VudCI6MTIwMDAsImV4cGxhbmF0aW9uIjoiYmlsbHMiLCJzZW5kZXJOYW1lIjoiTWFyaSBNYWFzaWthcyJ9.dNlBEmEddabpUvZ9V7MHx7A47YhzSWBg1vrx0XwfqLPDZ5dVqOp7nj22_YLmwH1Afv12qoRnz2IOR4dVmBMUT0QUh-5Cm2uJ9go72EWwUi6eJ3LpzaVvYlFU6UE6wAmEqW2O8E33a5XgHqpWoRY3h9v3AE2VRXWdecFnkLAUzcABvor7uxPlyi-TzNhdWvtaMqK7Jiuo3ud9-sKPu4U15VPF1dnR6FhbCn6Zakt8Vk9Fvo2UeXYspjIyDUEBKP4QHLkDRi5wPB76MFCgFo9wXjFdCFKWbrgapqnwTZN3phLQgqZ1Aj6M-Por7LaxJFQ57B1bTg4su4pigsyZyShD9A
        getTransactionsJwksResponse:
            title: GET /transactions/jwks response
            description: ''
            type: object
            properties:
                keys:
                    description: public key
                    type: array
                    items:
                        type: object
                        properties:
                            kty:
                                type: string
                            kid:
                                type: string
                            'n':
                                type: string
                            e:
                                type: string
            example:
                keys:
                    -
                        kty: RSA
                        kid: IPpIg1Xp0HJlzU0M8tLpwnpbVM_soaANPnBFd0ybS7Q
                        'n': >-
                            wLq2c-NIZvXY3YnoO6hWDrE0dFgcX6aw7Km4US1VTbAOMwpAnIqnxg7lvINFkPjtpKYpHC0f4tgJYY1hEvdvO5YFX2f6iKzS0_PqNosJOf2-4Xpi7sva8AQiAIlPZkSVKpB0jjIgN184EUVDIm9giIIUqnJsCYdBHBOTFR8UyCQtRwyPNUAfr9neCsHXlXnlicYfN7dqOcaX7w-XAJQmWhvQ_EVbvV2_xwlL7D-Dd_6zriEfD8xzB4mZ-Dg73KVbnvgfHM4vSyClen-qnhJVyVg3PDUOsFin_muISuI0PdJ-1AkoAcRerfGmeEw0rGSOsSvaNOo1_FGOkkIsOBr_iw
                        e: AQAB
    securitySchemes:
        Authorization:
            scheme: bearer
            type: http
